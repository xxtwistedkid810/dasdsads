-- Services
local Space = game:GetService("Workspace")
local Players = game:GetService("Players")
local Player = game:GetService("Players").LocalPlayer
local Mouse = Player:GetMouse()
local Camera = Space.CurrentCamera

local RS = game:GetService("RunService")
local UIS = game:GetService("UserInputService")

-- LUA CACHED FUNCTIONS
local clamp, round, abs, huge, random, floor = math.clamp, math.round, math.abs, math.huge, math.random, math.floor
local V3, CF, RGB = Vector3.new, CFrame.new, Color3.fromRGB
local DRAWING = Drawing.new

-- ESP API
local ESP_API = {}
ESP_API.NewText = function(info)
    local t = DRAWING("Text")
    t.Visible = info.Visible or false
    t.Color = info.Color or RGB(255, 255, 255)
    t.Size = info.Size or 14
    t.Center = true
    t.Outline = true
    t.OutlineColor = RGB(0, 0, 0)
    return t
end

ESP_API.NewBox = function(info)
    local box = DRAWING("Square")
    box.Visible = info.Visible or false
    box.Color = info.Color or RGB(255, 255, 255)
    box.Thickness = 2
    box.Filled = false
    return box
end

ESP_API.NewLine = function(info)
    local line = DRAWING("Line")
    line.Visible = info.Visible or false
    line.Color = info.Color or RGB(255, 255, 255)
    line.Thickness = 1
    return line
end

-- UI Framework
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xxtwistedkid810/dasdsads/refs/heads/main/src"))()
local RCX_Window = Library.NewWindow("Unmaned", {window_size = V3(750, 550), scalable = true})

-- ESP Settings
local ESP_Settings = {
    Enabled = true,
    Boxes = true,
    Names = true,
    HealthBars = true,
    Distance = true,
    Tracers = true,
    Color = {255, 0, 0}
}

local ESP_Page = RCX_Window.NewPage("ESP")
ESP_Page.NewToggle("Enable ESP", function(state) ESP_Settings.Enabled = state end, {default = ESP_Settings.Enabled})
ESP_Page.NewToggle("Boxes", function(state) ESP_Settings.Boxes = state end, {default = ESP_Settings.Boxes})
ESP_Page.NewToggle("Names", function(state) ESP_Settings.Names = state end, {default = ESP_Settings.Names})
ESP_Page.NewToggle("Health Bars", function(state) ESP_Settings.HealthBars = state end, {default = ESP_Settings.HealthBars})
ESP_Page.NewToggle("Distance", function(state) ESP_Settings.Distance = state end, {default = ESP_Settings.Distance})
ESP_Page.NewToggle("Tracers", function(state) ESP_Settings.Tracers = state end, {default = ESP_Settings.Tracers})

-- Aimbot Settings
local Aimbot_Settings = {
    Enabled = true,
    AimKey = Enum.KeyCode.E,
    Smoothness = 0.2,
    FOV = 100,
    FOVCircle = true,
    TeamCheck = true,
    SilentAim = false,
    BulletPenetration = false
}

local AIMBOT_Page = RCX_Window.NewPage("Aimbot")
AIMBOT_Page.NewToggle("Enable Aimbot", function(state) Aimbot_Settings.Enabled = state end, {default = Aimbot_Settings.Enabled})
AIMBOT_Page.NewSlider("Smoothness", function(value) Aimbot_Settings.Smoothness = value end, {default = Aimbot_Settings.Smoothness, min = 0.1, max = 1})
AIMBOT_Page.NewSlider("FOV Size", function(value) Aimbot_Settings.FOV = value end, {default = Aimbot_Settings.FOV, min = 50, max = 500})
AIMBOT_Page.NewToggle("Show FOV Circle", function(state) Aimbot_Settings.FOVCircle = state end, {default = Aimbot_Settings.FOVCircle})
AIMBOT_Page.NewToggle("Silent Aim", function(state) Aimbot_Settings.SilentAim = state end, {default = Aimbot_Settings.SilentAim})
AIMBOT_Page.NewToggle("Bullet Penetration", function(state) Aimbot_Settings.BulletPenetration = state end, {default = Aimbot_Settings.BulletPenetration})

-- Silent Aim Logic
local function GetSilentAimTarget()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= Player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            return player.Character.HumanoidRootPart.Position
        end
    end
    return nil
end

RS.RenderStepped:Connect(function()
    if Aimbot_Settings.SilentAim then
        local targetPos = GetSilentAimTarget()
        if targetPos then
            Mouse.Hit = CF(targetPos)
        end
    end
end)

-- Bullet Penetration Logic
local function AllowBulletPenetration()
    if Aimbot_Settings.BulletPenetration then
        for _, obj in pairs(Space:GetDescendants()) do
            if obj:IsA("BasePart") then
                obj.CanCollide = false
                obj.Transparency = 0.5
            end
        end
    end
end

RS.RenderStepped:Connect(function()
    AllowBulletPenetration()
end)

print("ESP, Aimbot, Silent Aim & Bullet Penetration Loaded Successfully!")
